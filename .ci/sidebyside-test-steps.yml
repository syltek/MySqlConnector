parameters:
  image: ''
  unsupportedFeatures: ''
  connectionString: ''
  platform: ''
  description: ''

steps:
- task: DeleteFiles@1
  condition: always()
  inputs:
    contents: '**/*.trx'
- task: DownloadPipelineArtifact@0
  condition: always()
  inputs:
    artifactName: ${{ format('SideBySide-{0}-$(Agent.OS)', parameters.platform) }}
    targetPath: ${{ format('$(Build.BinariesDirectory)/{0}', parameters.platform) }}
- task: DotNetCoreCLI@2
  displayName: ${{ format('{0} {1} Tests', parameters.platform, parameters.description) }}
  inputs:
    command: 'custom'
    custom: 'vstest'
    arguments: ${{  format('$(Build.BinariesDirectory)/{0}/SideBySide.dll /logger:trx', parameters.platform) }}
  env:
    DATA__UNSUPPORTEDFEATURES: ${{ parameters.unsupportedFeatures }}
    DATA__CONNECTIONSTRING: ${{ parameters.connectionString }}
    DATA__CERTIFICATESPATH: '$(Build.Repository.LocalPath)/.ci/server/certs/'
    DATA__MYSQLBULKLOADERLOCALCSVFILE: '$(Build.Repository.LocalPath)/tests/TestData/LoadData_UTF8_BOM_Unix.CSV'
    DATA__MYSQLBULKLOADERLOCALTSVFILE: '$(Build.Repository.LocalPath)/tests/TestData/LoadData_UTF8_BOM_Unix.TSV'
    TF_BUILD: $(TF_BUILD)
- task: PublishTestResults@2
  condition: always()
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/*.trx'
    testRunTitle: ${{ format('{0}, $(Agent.OS), {1}, {2}', parameters.image, parameters.platform, parameters.description) }}
    failTaskOnFailedTests: true