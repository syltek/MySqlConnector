sudo: required
dist: xenial
services: docker

env:
  - IMAGE=mysql:5.6
    NAME=mysql
    OMIT_FEATURES=Ed25519,Json,Sha256Password,RsaEncryption,LargePackets,CachingSha2Password,SessionTrack,Tls11,Tls12,UuidToBin
  - IMAGE=mysql:5.7
    NAME=mysql
    OMIT_FEATURES=Ed25519,RsaEncryption,CachingSha2Password,Tls12,UuidToBin
  - IMAGE=mysql:8.0
    NAME=mysql
    OMIT_FEATURES=Ed25519
  - IMAGE=percona:5.7.22
    NAME=percona
    OMIT_FEATURES=CachingSha2Password,Ed25519,UuidToBin
  - IMAGE=mariadb:10.2
    NAME=mariadb
    OMIT_FEATURES=Ed25519,Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin
  - IMAGE=mariadb:10.3
    NAME=mariadb
    OMIT_FEATURES=Ed25519,Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin
  - IMAGE=mariadb:10.4
    NAME=mariadb
    OMIT_FEATURES=Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin

before_install:
- .ci/docker-run.sh $IMAGE $NAME 3307 $OMIT_FEATURES
- sudo apt-get install -y libunwind8
- mkdir -p $HOME/dotnet
- wget -q https://download.visualstudio.microsoft.com/download/pr/14b65ed5-f508-49c4-b429-1b22085895cf/a6820dabd3a0303135fe11217405bfd1/dotnet-ubuntu.16.04-x64.1.1.13.tar.gz
- tar zxf dotnet-ubuntu.16.04-x64.1.1.13.tar.gz -C $HOME/dotnet
- wget -q https://download.visualstudio.microsoft.com/download/pr/2c78594a-dd2c-488e-b201-b7fd9b78ab00/5f2169b20fc704e069c336114ec653c5/dotnet-runtime-2.1.12-linux-x64.tar.gz
- tar zxf dotnet-runtime-2.1.12-linux-x64.tar.gz -C $HOME/dotnet
- wget -q https://download.microsoft.com/download/3/a/3/3a3bda26-560d-4d8e-922e-6f6bc4553a84/dotnet-runtime-2.0.9-linux-x64.tar.gz
- tar zxf dotnet-runtime-2.0.9-linux-x64.tar.gz -C $HOME/dotnet
- wget -q https://download.visualstudio.microsoft.com/download/pr/886b4a4c-30af-454b-8bec-81c72b7b4e1f/d1a0c8de9abb36d8535363ede4a15de6/dotnet-sdk-3.0.100-linux-x64.tar.gz
- tar zxf dotnet-sdk-3.0.100-linux-x64.tar.gz -C $HOME/dotnet
- export DOTNET_ROOT=$HOME/dotnet
- export PATH=$HOME/dotnet:$PATH
- dotnet --info

script:
- dotnet restore
- pushd tests/MySqlConnector.Tests && dotnet test -c Release && popd
- pushd tests/Conformance.Tests && CONNECTION_STRING="Server=localhost;Port=3307;User Id=mysqltest;Password=test;SSL Mode=None" dotnet test -c Release && popd
- pushd tests/SideBySide
- dotnet build SideBySide.csproj -c Release -f netcoreapp2.0
- echo 'Executing netcoreapp1.1.2 tests with No Compression, No SSL' && ../../.ci/use-config.sh config.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp1.1.2
- echo 'Executing netcoreapp2.0 tests with No Compression, No SSL' && ../../.ci/use-config.sh config.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.0
- echo 'Executing netcoreapp2.1 tests with No Compression, No SSL' && ../../.ci/use-config.sh config.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.1
- echo 'Executing netcoreapp2.1 tests with Compression, No SSL' && ../../.ci/use-config.sh config.compression.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.1
- echo 'Executing netcoreapp1.1.2 tests with No Compression, SSL' && ../../.ci/use-config.sh config.ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp1.1.2
- echo 'Executing netcoreapp2.1 tests with No Compression, SSL' && ../../.ci/use-config.sh config.ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.1
- echo 'Executing netcoreapp2.0 tests with Compression, SSL' && ../../.ci/use-config.sh config.compression+ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.0
- echo 'Executing netcoreapp2.0 tests with Unix Domain Socket, No Compression, No SSL' && ../../.ci/use-config.sh config.uds.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet test -c Release -f netcoreapp2.0
- popd

notifications:
  slack:
    secure: IHVnvL5z2g75VQt9qmJxpAyrbQQPA8VIaO0Of8q4p733E9aA4ZwuFDiqxXcamBbcFJeVPPq4xBTRPZNlTUyZt+No9oFaDnlIA1fKE/ksVH03SqrXwXO0k6toCqofb0/166+ijoe0m6IV7wfT8lvtgD9Lgd9y+M3Zh2NKXAlJasaOve8/pUOcgDqhfT5MST4RD1X4xdjcNnWifEQHACFWgYsM8bD5SrqbAYkHnUcZx0LnY7Cr2RwTUTFS5EN+lbSmy+uhE+JyYFT/5EBIcjLQql8QIHFanTtlGif5rosxb1Wot7pve6KWCGMUnM7FO5vmCbzeRC/kQZ4VGNQyFW8BrOTpOSOAPDfUvlIKuNsARkIYhHvLfjbNtjlcBuyrBKbuvLmGpYo7w+qUGimpi6xZTr3iq0cpb9OYhEtaF/upWI+p77kjjPYlXCg424zP+5SlTVBwCbOsUsKK/l1SjL8RBgpl/bgMTQ7jzEBO+zAWBW7H50d1edZ1IgyClVYbtwR0/gjJGndYyZLALf55x0FnYQkgCuPXU5egmdBiwQUZcRRcjgzY3s9tXLY2NHjI61Zt6IA4JoAugjH03VTo369gj641bLkH3ViVCLnvI6BPIaTsgjs+g6V00K+PT3+Vu9nnLd6eXc72V5QiWHPEMXyGTdnIYnHm9VvK7879c/W/aTM=
